[buildout]

parts =
    plone
    zope2
    fakezope2eggs
    instance
    PILwoTK
    zopepy
    archgenxml

develop =
    src/crisnet.skin

find-links =
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://svn.kmrc.de/download/distribution/
    http://dist.plone.org/

eggs =
    elementtree
    ipdb

[plone]
recipe = plone.recipe.plone

[fakezope2eggs]
recipe = affinitic.recipe.fakezope2eggs

[PILwoTK]
recipe = zc.recipe.egg
find-links =
    http://download.zope.org/distribution/

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}
fake-eggs = true
# requiring zope.testing for z2testrunner
skip-fake-eggs = zope.testing
                 zope.contenttype
                 zope.component
                 zope.interface
                 zope.app.testing
                 zope.app.debugi
                 zope.i18n

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
environment-vars =
    PTS_LANGUAGES fr

eggs =
    ${buildout:eggs}
    ${plone:eggs}
    PILwoTK
    plone.reload
    z3c.jbot
    collective.plonetruegallery
    collective.captcha==1.3
    crisnet.skin

zcml =
    crisnet.skin
    crisnet.skin-overrides
    collective.plonetruegallery
    collective.captcha

products =
    ${plone:products}
    ${buildout:directory}/src

[scripts]
recipe = zc.recipe.egg:scripts
eggs = ZSI
extra-paths = ${zope2:location}/lib/python


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[archgenxml]
recipe = zc.recipe.egg
eggs =
    zope.component
    zope.configuration
    archgenxml
